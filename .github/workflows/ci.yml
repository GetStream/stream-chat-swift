name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'Sources/**' # Only run if a file outside /Sources changes (anything outside v2 is assumed to be v3)
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'Sources/**' # Only run if a file outside /Sources changes (anything outside v2 is assumed to be v3)
  release:
    types:
      - created

env:
  carthage-cache-dir: 'carthage-cache-14122020' # When you change carthage cache directory, please append the date

jobs:
  run-danger:
    name: Run Danger
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - name: Cache RubyGems
        uses: actions/cache@v2
        id: rubygem-cache
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gem-
      - name: Cache Mint
        uses: actions/cache@v2
        id: mint-cache
        with:
          path: /usr/local/lib/mint
          key: ${{ runner.os }}-mint-${{ hashFiles('./Mintfile') }}
          restore-keys: ${{ runner.os }}-mint-
      - name: Run bootstrap.sh
        run: ./bootstrap.sh
      - name: Run Danger
        run: bundle exec danger
        env:
          GITHUB_TOKEN: ${{ secrets.DANGER_GITHUB_API_TOKEN }}
      
  build-and-test-v3-debug:
    name: Run v3 Tests (Debug)
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: Cache RubyGems
      uses: actions/cache@v2
      id: rubygem-cache
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: ${{ runner.os }}-gem-
    - name: Cache Mint
      uses: actions/cache@v2
      id: mint-cache
      with:
        path: /usr/local/lib/mint
        key: ${{ runner.os }}-mint-${{ hashFiles('./Mintfile') }}
        restore-keys: ${{ runner.os }}-mint-
    - name: Run bootstrap.sh
      run: ./bootstrap.sh
    - name: Run v3 Tests (Debug)
      run: bundle exec fastlane test_v3
    - name: Post Codecov report
      run: bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_TOKEN }}

  build-and-test-v3-release:
    name: Run v3 Tests (Release)
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: Cache RubyGems
      uses: actions/cache@v2
      id: rubygem-cache
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: ${{ runner.os }}-gem-
    - name: Cache Mint
      uses: actions/cache@v2
      id: mint-cache
      with:
        path: /usr/local/lib/mint
        key: ${{ runner.os }}-mint-${{ hashFiles('./Mintfile') }}
        restore-keys: ${{ runner.os }}-mint-
    - name: Run bootstrap.sh
      run: ./bootstrap.sh
    - name: Run v3 Tests (Release)
      run: bundle exec fastlane test_v3_release

  build-and-test-v3-ios12:
    name: Run v3 Tests (iOS12.4)
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: Cache RubyGems
      uses: actions/cache@v2
      id: rubygem-cache
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: ${{ runner.os }}-gem-
    - name: Cache Mint
      uses: actions/cache@v2
      id: mint-cache
      with:
        path: /usr/local/lib/mint
        key: ${{ runner.os }}-mint-${{ hashFiles('./Mintfile') }}
        restore-keys: ${{ runner.os }}-mint-
    - name: Run bootstrap.sh
      run: ./bootstrap.sh
    - name: Prepare iOS 12 simulator
      run: |
        sudo mkdir -p /Library/Developer/CoreSimulator/Profiles/Runtimes
        sudo ln -s /Applications/Xcode_10.3.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/Library/CoreSimulator/Profiles/Runtimes/iOS.simruntime /Library/Developer/CoreSimulator/Profiles/Runtimes/iOS\ 12.4.simruntime
        xcrun simctl list runtimes
        xcrun simctl create custom-test-device "iPhone 7" "com.apple.CoreSimulator.SimRuntime.iOS-12-4"
        xcrun simctl list devices 12.4
    - name: Run v3 Tests (Debug - iOS 12.4)
      run: bundle exec fastlane test_v3 device:"iPhone 7 (12.4)"

  build-sample-v3:
    name: Build v3 Sample
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: Cache RubyGems
      uses: actions/cache@v2
      id: rubygem-cache
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: ${{ runner.os }}-gem-
    - name: Cache Mint
      uses: actions/cache@v2
      id: mint-cache
      with:
        path: /usr/local/lib/mint
        key: ${{ runner.os }}-mint-${{ hashFiles('./Mintfile') }}
        restore-keys: ${{ runner.os }}-mint-
    - name: Run bootstrap.sh
      run: ./bootstrap.sh
    - name: Build v3 Sample
      run: bundle exec fastlane build_sample_v3

  build-sample-v3-ios12:
    name: Build v3 Sample (iOS12.4)
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: Cache RubyGems
      uses: actions/cache@v2
      id: rubygem-cache
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: ${{ runner.os }}-gem-
    - name: Cache Mint
      uses: actions/cache@v2
      id: mint-cache
      with:
        path: /usr/local/lib/mint
        key: ${{ runner.os }}-mint-${{ hashFiles('./Mintfile') }}
        restore-keys: ${{ runner.os }}-mint-
    - name: Run bootstrap.sh
      run: ./bootstrap.sh
    - name: Prepare iOS 12 simulator
      run: |
        sudo mkdir -p /Library/Developer/CoreSimulator/Profiles/Runtimes
        sudo ln -s /Applications/Xcode_10.3.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/Library/CoreSimulator/Profiles/Runtimes/iOS.simruntime /Library/Developer/CoreSimulator/Profiles/Runtimes/iOS\ 12.4.simruntime
        xcrun simctl list runtimes
        xcrun simctl create custom-test-device "iPhone 7" "com.apple.CoreSimulator.SimRuntime.iOS-12-4"
        xcrun simctl list devices 12.4
    - name: Build v3 Sample
      run: bundle exec fastlane build_sample_v3 device:"iPhone 7 (12.4)"
