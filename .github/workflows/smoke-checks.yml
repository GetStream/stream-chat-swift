name: Smoke Checks

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - created

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
      
env:
  HOMEBREW_NO_INSTALL_CLEANUP=1: 1 # Disable cleanup for homebrew, we don't need it on CI

jobs:
  automated-code-review:
    name: Automated Code Review
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v1
      - uses: ./.github/actions/set-build-image-var
      - name: Cache RubyGems
        uses: actions/cache@v2
        id: rubygem-cache
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-${{ env.ImageVersion }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-${{ env.ImageVersion }}-gem-
      - name: Cache Mint
        uses: actions/cache@v2
        id: mint-cache
        with:
          path: /usr/local/lib/mint
          key: ${{ runner.os }}-mint-${{ hashFiles('./Mintfile') }}
          restore-keys: ${{ runner.os }}-mint-
      - uses: ./.github/actions/bootstrap
      - name: Run Danger
        run: bundle exec danger
        env:
          GITHUB_TOKEN: ${{ secrets.DANGER_GITHUB_API_TOKEN }}
      - name: Run Linting
        run: ./Scripts/run-linter.sh

  build-and-test-debug:
    name: Test LLC (Debug)
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v1
    - name: Set build image var
      run: echo "ImageVersion=$ImageVersion"  >> $GITHUB_ENV
    - name: Cache RubyGems
      uses: actions/cache@v2
      id: rubygem-cache
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-${{ env.ImageVersion }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: ${{ runner.os }}-${{ env.ImageVersion }}-gem-
    - name: Cache Mint
      uses: actions/cache@v2
      id: mint-cache
      with:
        path: /usr/local/lib/mint
        key: ${{ runner.os }}-mint-${{ hashFiles('./Mintfile') }}
        restore-keys: ${{ runner.os }}-mint-
    - uses: ./.github/actions/bootstrap
    - name: Run LLC Tests (Debug)
      run: bundle exec fastlane test device:"iPhone 12"
    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: llc-tests
        fail_ci_if_error: true # if codecov upload fails, should fail ci
        verbose: true
    - uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: "You shall not pass!"
        job_name: "Test LLC (Debug)"
        fields: message,commit,author,action,workflow,job,took
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      if: ${{ github.event_name == 'push' && failure() }}

  build-and-test-ui-debug:
    name: Test UI (Debug)
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v1
    - name: Set build image var
      run: echo "ImageVersion=$ImageVersion"  >> $GITHUB_ENV
    - name: Cache RubyGems
      uses: actions/cache@v2
      id: rubygem-cache
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-${{ env.ImageVersion }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: ${{ runner.os }}-${{ env.ImageVersion }}-gem-
    - name: Cache Mint
      uses: actions/cache@v2
      id: mint-cache
      with:
        path: /usr/local/lib/mint
        key: ${{ runner.os }}-mint-${{ hashFiles('./Mintfile') }}
        restore-keys: ${{ runner.os }}-mint-
    - uses: ./.github/actions/bootstrap
    - name: Prepare iPhone 12 with iOS 15.0
      uses: ./.github/actions/prepare-ios-simulator
      with:
        device: "iPhone 12"
        ios: "15.0"
        xcode: "13.0"
    - name: Run UI Tests (Debug)
      run: bundle exec fastlane test_ui device:"iPhone 12 (15.0)"
    - uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: "You shall not pass!"
        job_name: "Test UI (Debug)"
        fields: message,commit,author,action,workflow,job,took
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      if: ${{ github.event_name == 'push' && failure() }}

  build-apps:
    name: Build Sample + Demo Apps
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v1
    - name: Set build image var
      run: echo "ImageVersion=$ImageVersion"  >> $GITHUB_ENV
    - name: Cache RubyGems
      uses: actions/cache@v2
      id: rubygem-cache
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-${{ env.ImageVersion }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: ${{ runner.os }}-${{ env.ImageVersion }}-gem-
    - name: Cache Mint
      uses: actions/cache@v2
      id: mint-cache
      with:
        path: /usr/local/lib/mint
        key: ${{ runner.os }}-mint-${{ hashFiles('./Mintfile') }}
        restore-keys: ${{ runner.os }}-mint-
    - uses: ./.github/actions/bootstrap
    - name: Build Sample App
      run: bundle exec fastlane build_sample
    - name: Build Demo App
      run: bundle exec fastlane build_demo
    - name: Build iMessageClone App
      run: bundle exec fastlane build_imessage_clone
    - name: Build SlackClone App
      run: bundle exec fastlane build_slack_clone
    - name: Build MessengerClone App
      run: bundle exec fastlane build_messenger_clone
    - name: Build YouTubeClone App
      run: bundle exec fastlane build_youtube_clone
    - uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: "You shall not pass!"
        job_name: "Build Sample + Demo Apps"
        fields: message,commit,author,action,workflow,job,took
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      if: ${{ github.event_name == 'push' && failure() }}

  # build-docs-snippets:
  #   name: Build Docs Snippets
  #   runs-on: macos-11
  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: Set build image var
  #     run: echo "ImageVersion=$ImageVersion"  >> $GITHUB_ENV
  #   - name: Cache RubyGems
  #     uses: actions/cache@v2
  #     id: rubygem-cache
  #     with:
  #       path: vendor/bundle
  #       key: ${{ runner.os }}-${{ env.ImageVersion }}-gem-${{ hashFiles('**/Gemfile.lock') }}
  #       restore-keys: ${{ runner.os }}-${{ env.ImageVersion }}-gem-
  #   - name: Build Docs Snippets
  #     run: bundle exec fastlane build_docs_snippets
  #   - uses: 8398a7/action-slack@v3
  #     with:
  #       status: ${{ job.status }}
  #       text: "You shall not pass!"
  #       job_name: "Build Docs Snippets"
  #       fields: message,commit,author,action,workflow,job,took
  #     env:
  #       SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  #       MATRIX_CONTEXT: ${{ toJson(matrix) }}
  #     if: ${{ github.event_name == 'push' && failure() }}

  spm-integration:
    name: Test Integration (SPM)
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v1
    - name: Set build image var
      run: echo "ImageVersion=$ImageVersion"  >> $GITHUB_ENV
    - name: Cache RubyGems
      uses: actions/cache@v2
      id: rubygem-cache
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-${{ env.ImageVersion }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: ${{ runner.os }}-${{ env.ImageVersion }}-gem-
    - name: Cache Mint
      uses: actions/cache@v2
      id: mint-cache
      with:
        path: /usr/local/lib/mint
        key: ${{ runner.os }}-mint-${{ hashFiles('./Mintfile') }}
        restore-keys: ${{ runner.os }}-mint-
    - uses: ./.github/actions/bootstrap
    - name: Build Test Project
      run: bundle exec fastlane spm_integration
    - uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: "You shall not pass!"
        job_name: "Test Integration (SPM)"
        fields: message,commit,author,action,workflow,job,took
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      if: ${{ github.event_name == 'push' && failure() }}

  cocoapods-integration:
    name: Test Integration (CocoaPods)
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v1
    - name: Set build image var
      run: echo "ImageVersion=$ImageVersion"  >> $GITHUB_ENV
    - name: Cache RubyGems
      uses: actions/cache@v2
      id: rubygem-cache
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-${{ env.ImageVersion }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: ${{ runner.os }}-${{ env.ImageVersion }}-gem-
    - name: Cache Mint
      uses: actions/cache@v2
      id: mint-cache
      with:
        path: /usr/local/lib/mint
        key: ${{ runner.os }}-mint-${{ hashFiles('./Mintfile') }}
        restore-keys: ${{ runner.os }}-mint-
    - uses: ./.github/actions/bootstrap
    - name: Build Test Project
      run: bundle exec fastlane cocoapods_integration
    - uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: "You shall not pass!"
        job_name: "Test Integration (CocoaPods)"
        fields: message,commit,author,action,workflow,job,took
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      if: ${{ github.event_name == 'push' && failure() }}
